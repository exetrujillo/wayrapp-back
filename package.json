{
  "name": "wayrapp-back",
  "version": "1.0.0",
  "description": "Backend para la aplicación de lenguas Wayrapp - Agnóstico a la base de datos",
  "main": "index.js",
  "scripts": {
    "dev": "tsx watch --env-file .env src/server.ts",
    "lint": "eslint . --ext .ts",
    "format": "prettier --write .",
    "setup:dev": "sh scripts/setup-dev.sh",

    "db:generate": "docker-compose exec app node_modules/.bin/prisma generate --schema=./src/infrastructure/database/adapters/prisma/schema.prisma",
    "db:migrate": "docker-compose exec app node_modules/.bin/prisma migrate dev --schema=./src/infrastructure/database/adapters/prisma/schema.prisma",
    "db:deploy": "docker-compose exec app node_modules/.bin/prisma migrate deploy --schema=./src/infrastructure/database/adapters/prisma/schema.prisma",
    
    "db:generate:postgres": "docker-compose exec app sh -c \"cat src/infrastructure/database/adapters/prisma/schemas/postgres.prisma src/infrastructure/database/adapters/prisma/schemas/_base.prisma > src/infrastructure/database/adapters/prisma/schema.prisma && npx prisma generate --schema=./src/infrastructure/database/adapters/prisma/schema.prisma\"",
    "db:migrate:postgres": "docker-compose exec app sh -c \"cat src/infrastructure/database/adapters/prisma/schemas/postgres.prisma src/infrastructure/database/adapters/prisma/schemas/_base.prisma > src/infrastructure/database/adapters/prisma/schema.prisma && npx prisma migrate dev --schema=./src/infrastructure/database/adapters/prisma/schema.prisma\"",
    "db:deploy:postgres": "docker-compose exec app sh -c \"cat src/infrastructure/database/adapters/prisma/schemas/postgres.prisma src/infrastructure/database/adapters/prisma/schemas/_base.prisma > src/infrastructure/database/adapters/prisma/schema.prisma && npx prisma migrate deploy --schema=./src/infrastructure/database/adapters/prisma/schema.prisma\"",

    "db:generate:mysql": "docker-compose exec app sh -c \"cat src/infrastructure/database/adapters/prisma/schemas/mysql.prisma src/infrastructure/database/adapters/prisma/schemas/_base.prisma > src/infrastructure/database/adapters/prisma/schema.prisma && npx prisma generate --schema=./src/infrastructure/database/adapters/prisma/schema.prisma\"",
    "db:migrate:mysql": "docker-compose exec app sh -c \"cat src/infrastructure/database/adapters/prisma/schemas/mysql.prisma src/infrastructure/database/adapters/prisma/schemas/_base.prisma > src/infrastructure/database/adapters/prisma/schema.prisma && npx prisma migrate dev --schema=./src/infrastructure/database/adapters/prisma/schema.prisma\"",
    "db:deploy:mysql": "docker-compose exec app sh -c \"cat src/infrastructure/database/adapters/prisma/schemas/mysql.prisma src/infrastructure/database/adapters/prisma/schemas/_base.prisma > src/infrastructure/database/adapters/prisma/schema.prisma && npx prisma migrate deploy --schema=./src/infrastructure/database/adapters/prisma/schema.prisma\"",
    
    "test": "npm run test:unit",
    "test:unit": "jest --config jest.config.cjs",
    "test:integration:postgres": "npm run db:generate:postgres && npm run db:generate:local:postgres && cross-env DATABASE_PROVIDER=postgres npm run test:integration:run",
    "test:integration:mysql": "npm run db:generate:mysql && npm run db:generate:local:mysql && cross-env DATABASE_PROVIDER=mysql npm run test:integration:run",
    "db:generate:local:postgres": "copy /b src\\infrastructure\\database\\adapters\\prisma\\schemas\\postgres.prisma+src\\infrastructure\\database\\adapters\\prisma\\schemas\\_base.prisma src\\infrastructure\\database\\adapters\\prisma\\schema.prisma && npx prisma generate --schema=./src/infrastructure/database/adapters/prisma/schema.prisma",
    "db:generate:local:mysql": "copy /b src\\infrastructure\\database\\adapters\\prisma\\schemas\\mysql.prisma+src\\infrastructure\\database\\adapters\\prisma\\schemas\\_base.prisma src\\infrastructure\\database\\adapters\\prisma\\schema.prisma && npx prisma generate --schema=./src/infrastructure/database/adapters/prisma/schema.prisma",
    "test:all-dbs": "npm run test:integration:postgres && npm run test:integration:mysql",
    "test:integration:run": "cross-env NODE_OPTIONS=--experimental-vm-modules jest --config jest.integration.config.cjs --passWithNoTests",
    
    "prepare": "husky",
    "docker:up": "docker-compose up -d --build",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f app",
    "docker:shell": "docker-compose run --rm app sh"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/exetrujillo/wayrapp-back.git"
  },
  "keywords": [],
  "author": "Exequiel Trujillo Escobar",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/exetrujillo/wayrapp-back/issues"
  },
  "homepage": "https://github.com/exetrujillo/wayrapp-back#readme",
  "devDependencies": {
    "@testcontainers/mysql": "^11.5.1",
    "@testcontainers/postgresql": "^11.5.1",
    "@types/express": "^5.0.3",
    "@types/jest": "^29.5.12",
    "@types/node": "^24.5.1",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "cross-env": "^10.0.0",
    "eslint": "^9.35.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^16.1.6",
    "prettier": "^3.6.2",
    "prisma": "^6.16.2",
    "supertest": "^7.1.4",
    "testcontainers": "^11.5.1",
    "ts-jest": "^29.1.5",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2",
    "typescript-eslint": "^8.44.0"
  },
  "dependencies": {
    "@prisma/client": "^6.16.2",
    "@types/bcrypt": "^6.0.0",
    "bcrypt": "^6.0.0",
    "express": "^5.1.0",
    "mysql2": "^3.15.0",
    "reflect-metadata": "^0.2.2",
    "typeorm": "^0.3.27",
    "uuid": "^13.0.0",
    "zod": "^4.1.9",
    "zod-validation-error": "^4.0.1"
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ],
    "src/**/*.ts": [
      "npm run test:unit -- --findRelatedTests --bail --passWithNoTests"
    ]
  }
}
